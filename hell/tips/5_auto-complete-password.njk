---
title: autocompleting password fields
layout: layouts/tip.njk
issue: 5
processed: true
description: "You can help password managers and browsers (pre)fill password fields by using the autocomplete attribute,...and by doing “other stuff”."
tags:
  - tips
  - tip_a
element: a
resources:
  - title: Making password managers play ball with your login form
    url: https://hiddedevries.nl/en/blog/2018-01-13-making-password-managers-play-ball-with-your-login-form
  - title: "Autofill: What web devs should know, but don’t"
    url: https://cloudfour.com/thinks/autofill-what-web-devs-should-know-but-dont/
  - title: "Sign-in form best practices"
    url: https://web.dev/sign-in-form-best-practices/#new-password
  - title: "The HTML autocomplete attribut"
    url: https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete
---
<p>
  You can help password managers and browsers (pre)fill password fields by using the <code>autocomplete</code> attribute,...and by doing <em>other stuff</em>.
</p>

{% highlight "html" %}
<label for="new-password">New Password</label>
<input type="password" autocomplete="new-password" id="new-password" name="new-password" />
{% endhighlight %}

<!-- teaser -->

<p>
  Let's start with the <em>other stuff</em>. When I created a demo for this post, I wanted to show you that you can use <code>autocomplete="new-password"</code> to instruct browsers to offer users auto-generated passwords, for example in a sign-up form. 
</p>

<figure>
  <picture>
    <source srcset="/images/5_auto-complete-password1.avif" type="image/avif">
    <img src="/images/5_auto-complete-password1.jpg" width="411" height="302" alt="Username and New Password input fields. Firefox suggests an auto-generated password.">
  </picture>
  <figcaption>
    Firefox recognizes this password input field as a field for a new password and offers to fill it with a random string.
  </figcaption>
</figure>

<p>In order to prove that I created a <a href="https://codepen.io/matuzo/pen/qBmdvaz">simple form without the attribute</a>.</p>

{% highlight "html" %}
<form>
  <div>
    <label for="username">Username</label>
    <input type="text" id="username" name="username" />
  </div>  

  <div>
    <label for="np">New Password</label>
    <input type="password" id="np" name="np" />
  </div>
</form>
{% endhighlight %}

<p>
  The thing is, Firefox suggested the auto-generated password, anyway. I was confused. After some testing and research, I learned that browsers take all kinds of things into consideration when figuring out what the purpose of an input field is. In this specific example, it was the fact that the <code>label</code> included the words “new password”. Mind blown!
</p>

<p>
  I translated the labels to German and Firefox didn't suggest the password anymore. Ha! Gotcha, Firefox, and that only took me 2 hours to figure out.
</p>

{% highlight "html" %}
<div>
  <label for="username">Benutzername</label>
  <input type="text" id="username" name="username" />
</div>  

<div>
  <label for="np">Neues Passwort</label>
  <input type="password" id="np" name="np" />
</div>
{% endhighlight %}

<picture>
  <source srcset="/images/5_auto-complete-password2.avif" type="image/avif">
  <img src="/images/5_auto-complete-password2.jpg" width="330" height="197" alt="Username and New Password input fields. Firefox doesn't suggests an auto-generated password.">
</picture>

<p>
  You might have noticed that the <code>id</code> and <code>name</code> attributes are short and hard to read. That's because browsers take these attributes into consideration, as well. Just naming the <code>id</code> or <code>name</code> “new-password” or even just “new-pwd” brings the auto-generated password autocomplete back. 
</p>

{% highlight "html" %}
<p>
  <label for="new-pwd">Neues Passwort</label>
  <input type="password" id="new-pwd" name="np" />
</p>
{% endhighlight %}

<picture>
  <source srcset="/images/5_auto-complete-password3.avif" type="image/avif">
  <img src="/images/5_auto-complete-password3.jpg" width="418" height="320" alt="Username and New Password input fields. Firefox suggests an auto-generated password.">
</picture>

<p>
  You can see that in action here <a href="https://codepen.io/matuzo/pen/MWmwxzZ">auto-complete password: no attribute but id</a> and here <a href="https://codepen.io/matuzo/pen/dyWorEp">auto-complete password: no attribute but name</a>.
</p>

<p>
  Of course, that is a very reduced test case, things are usually much more complicated. I only tested this in one browser and only with the built-in password manager. We shouldn't rely on browsers algorithms, but help them figure out what the purpose of our input fields is.
  <br>
  <br>
  We should: 
</p>

<ul>
  <li>Use standard HTML form elements, attributes and practices (<code>form</code>, <code>label</code>, <code>input</code>, etc.)</li>
  <li>Use the correct <code>type</code> attribute for each input field</li>
  <li>Make sure that we don't generate <code>id</code>s and <code>name</code>s randomly</code></li>
  <li>Use common values or values that are similiar to the value of the <code>autocomplete</code> attribute for the <code>name</code> and <code>id</code> attributes</li>
  <li>Add the <code>autocomplete</code> attribute and use the values <code>current-password</code> for the current password and <code>new-password</code> for new passwords</li>
  <li>Use different <code>name</code> and <code>id</code> values in sign-up and sign-in forms, for the form element itself, as well as any input, select and textarea elements</li>
  <li>Test thoroughly in different browsers with different password managers.</li>
</ul>

{% highlight "html" %}
<form>
  <p>
    <label for="username">Username</label>
    <input type="text" id="username" name="username" autocomplete="username" />
  </p>  

  <p>
    <label for="new-password">New Password</label>
    <input type="password" id="new-password" name="new-password" autocomplete="new-password" />
  </p>
</form>
{% endhighlight %}

<p>
  That only scratches the surface. There’s so much more to learn about the <code>autocomplete</code> attribute. I can highly recommend these resources:
</p>
